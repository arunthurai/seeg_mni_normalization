#---- begin snakebids boilerplate ----------------------------------------------

import snakebids
from snakebids import bids

configfile: workflow.source_path('../config/snakebids.yml')

# Get input wildcards
inputs = snakebids.generate_inputs(
    bids_dir=config["bids_dir"],
    pybids_inputs=config["pybids_inputs"],
    pybids_database_dir=config.get("pybids_db_dir"),
    pybids_reset_database=config.get("pybids_db_reset"),
    derivatives=config.get("derivatives", None),
    participant_label=config.get("participant_label", None),
    exclude_participant_label=config.get("exclude_participant_label", None),
    use_bids_inputs=True,
)



#this adds constraints to the bids naming
wildcard_constraints:  **snakebids.get_wildcard_constraints(config['pybids_inputs'])

# ----
wildcard_constraints:
    desc="[a-zA-Z0-9]+",
    space="[a-zA-Z0-9]+",
    hemi="[a-zA-Z0-9]+",
    surfname="[a-zA-Z0-9]+",
    modality="[a-zA-Z0-9]+",
    density="[a-zA-Z0-9]+",
    atlas="[a-zA-Z0-9]+",
    label="[a-zA-Z0-9]+",
    template="[a-zA-Z0-9]+",

include: "rules/preproc_T1w.smk"
include: "rules/normalize_T1w.smk"
#include: "rules/normalize_contacts.smk"

rule all:
    input:
        expand(
            expand(
                rules.greedy_t1_to_template.output.affine_xfm_ras,
                allow_missing=True,
            ),
            zip,
            **inputs.zip_lists['base_T1w']
        )
    default_target: True
